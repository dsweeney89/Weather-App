{"version":3,"sources":["components/Titles.js","countries.js","cities.js","components/Form.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["Titles","props","className","countries","cities","Form","onSubmit","getWeather","method","list","name","id","placeholder","autoComplete","map","option","index","key","value","error","convert","time","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","toTitleCase","str","replace","txt","charAt","toUpperCase","toLowerCase","Weather","city","country","temperature","humidity","pressure","sunrise","sunset","description","API_KEY","App","state","undefined","code","e","a","async","preventDefault","target","elements","fetch","api_call","json","data","console","log","cod","setState","main","temp","sys","weather","icon","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iQASeA,EAPA,SAAAC,GAAK,OAClB,yBAAKC,UAAU,+BACb,wBAAIA,UAAU,SAAd,oBACA,uBAAGA,UAAU,SAAb,sDCkMWC,G,MAtMf,CACE,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACG,UACA,SACH,QACA,SACA,UACA,yBACA,WACA,SACA,SACA,WACA,eACA,UACA,mBACA,aACA,WACA,WACA,SACA,2BACA,OACA,QACA,QACA,WACA,UACA,QACA,aACA,UACA,OACA,SACA,iBACA,mCACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,WACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACG,YACH,aACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,cACA,kBACA,SACA,OACA,WACA,QACA,kBACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,wBACA,cACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,cACA,QACA,YACA,QACA,WACA,SACA,cACA,QACA,aACA,WACA,WACA,cACA,OACA,QACA,sBACA,UACA,SACA,eACA,SACA,SACA,UACA,uBACA,iBACA,2BACA,UACA,aACA,UACA,YACA,UACA,QACA,SACA,aC4CaC,EA/Of,CACA,eACA,QACA,QACA,WACA,YACA,cACA,SACA,aACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,SACA,cACA,OACA,YACA,YACA,UACA,YACA,UACA,SACA,UACA,WACA,SACA,SACA,aACA,SACA,WACA,SACA,WACA,aACA,WACA,WACA,UACA,WACA,YACA,WACA,kBACA,QACA,QACA,UACA,OACA,WACA,eACA,UACA,aACA,YACA,UACA,UACA,UACA,YACA,eACA,YACA,UACA,sBACA,WACA,aACA,oBACA,WACA,SACA,sBACA,QACA,SACA,UACA,QACA,QACA,SACA,aACA,YACA,WACA,aACA,WACA,gBACA,YACA,SACA,OACA,UACA,gBACA,cACA,YACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,4BACA,WACA,UACA,OACA,YACA,eACA,YACA,WACA,eACA,SACA,UACA,YACA,eACA,SACA,iBACA,UACA,YACA,WACA,YACA,UACA,kBACA,QACA,SACA,eACA,YACA,YACA,OACA,SACA,YACA,SACA,gBACA,iBACA,aACA,UACA,OACA,SACA,aACA,SACA,YACA,QACA,WACA,YACA,UACA,OACA,iBACA,QACA,QACA,YACA,cACA,cACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,iBACA,cACA,YACA,OACA,aACA,UACA,mBACA,QACA,QACA,OACA,SACA,iBACA,QACA,QACA,eACA,gBACA,UACA,aACA,kBACA,WACA,QACA,SACA,WACA,OACA,UACA,UACA,OACA,uBACA,YACA,SACA,OACA,YACA,aACA,iBACA,eACA,mBACA,cACA,eACA,WACA,eACA,WACA,UACA,QACA,WACA,UACA,YACA,WACA,QACA,cACA,mBACA,eACA,cACA,YACA,WACA,uBACA,YACA,WACA,QACA,UACA,SACA,QACA,SACA,cACA,eACA,UACA,UACA,QACA,UACA,WACA,UACA,SACA,QACA,WACA,YACA,SACA,WACA,SACA,oBACA,SACA,aACA,aACA,UACA,UACA,WACA,QACA,SACA,SACA,UChLeC,EApCF,SAAAJ,GAAK,OAChB,0BAAMK,SAAUL,EAAMM,WAAYC,OAAO,OACvC,yBAAKN,UAAU,YACb,y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","file":"static/js/main.c414a335.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Titles = props => (\r\n  <div className=\"text-center title-container\">\r\n    <h1 className=\"title\">Weather Forecast</h1>\r\n    <p className=\"title\">Find temperature, weather conditons and more....</p>\r\n  </div>\r\n);\r\n\r\nexport default Titles;\r\n","const countries = \r\n[\r\n \t\"Afghanistan\",\t\t\t\r\n \t\"Albania\",\t\t\t\r\n \t\"Algeria\",\t\t\t\r\n \t\"Andorra\",\t\t\t\r\n \t\"Angola\",\t\t\t\r\n \t\"Antigua and Barbuda\",\t\t\t\r\n \t\"Argentina\",\t\t\t\r\n \t\"Armenia\",\t\t\r\n \t\"Australia\",\t\t\t\r\n \t\"Austria\",\t\t\t\r\n \t\"Azerbaijan\",\t\t\t\r\n \t\"Bahamas\",\t\t\r\n \t\"Bahrain\",\t\t\t\r\n \t\"Bangladesh\",\t\t\t\r\n \t\"Barbados\",\t\t\t\r\n \t\"Belarus\",\t\t\t\r\n     \"Belgium\",\t\t\t\t\r\n     \"Belize\",\t\t\t\r\n \t\"Benin\",\t\t\t\r\n \t\"Bhutan\",\t\t\t\r\n \t\"Bolivia\",\t\t\t\r\n \t\"Bosnia and Herzegovina\",\t\t\t\r\n \t\"Botswana\",\t\t\t\r\n \t\"Brazil\",\t\t\t\r\n \t\"Brunei\",\t\t\t\r\n \t\"Bulgaria\",\t\t\t\r\n \t\"Burkina Faso\",\t\t\r\n \t\"Burundi\",\r\n \t\"CÃ´te d'Ivoire\",\r\n \t\"Cabo Verde\",\r\n \t\"Cambodia\",\r\n \t\"Cameroon\",\r\n \t\"Canada\",\r\n \t\"Central African Republic\",\r\n \t\"Chad\",\r\n \t\"Chile\",\r\n \t\"China\",\r\n \t\"Colombia\",\r\n \t\"Comoros\",\r\n \t\"Congo\",\r\n \t\"Costa Rica\",\r\n \t\"Croatia\",\r\n \t\"Cuba\",\r\n \t\"Cyprus\",\r\n \t\"Czech Republic\",\r\n \t\"Democratic Republic of the Congo\",\r\n \t\"Denmark\",\r\n \t\"Djibouti\",\r\n \t\"Dominica\",\r\n \t\"Dominican Republic\",\r\n \t\"Ecuador\",\r\n \t\"Egypt\",\r\n \t\"El Salvador\",\r\n \t\"Equatorial Guinea\",\r\n \t\"Eritrea\",\r\n \t\"Estonia\",\r\n \t\"Eswatini\",\r\n \t\"Ethiopia\",\r\n \t\"Fiji\",\r\n \t\"Finland\",\r\n \t\"France\",\r\n \t\"Gabon\",\r\n \t\"Gambia\",\r\n \t\"Georgia\",\r\n \t\"Germany\",\r\n \t\"Ghana\",\r\n \t\"Greece\",\r\n \t\"Grenada\",\r\n \t\"Guatemala\",\r\n \t\"Guinea\",\r\n \t\"Guinea-Bissau\",\r\n \t\"Guyana\",\r\n \t\"Haiti\",\r\n \t\"Holy See\",\r\n \t\"Honduras\",\r\n \t\"Hungary\",\r\n \t\"Iceland\",\r\n \t\"India\",\r\n \t\"Indonesia\",\r\n \t\"Iran\",\r\n \t\"Iraq\",\r\n \t\"Ireland\",\r\n \t\"Israel\",\r\n \t\"Italy\",\r\n \t\"Jamaica\",\r\n \t\"Japan\",\r\n \t\"Jordan\",\r\n \t\"Kazakhstan\",\r\n \t\"Kenya\",\r\n \t\"Kiribati\",\r\n \t\"Kuwait\",\r\n \t\"Kyrgyzstan\",\r\n \t\"Laos\",\r\n \t\"Latvia\",\r\n \t\"Lebanon\",\r\n \t\"Lesotho\",\r\n \t\"Liberia\",\r\n \t\"Libya\",\r\n \t\"Liechtenstein\",\r\n     \"Lithuania\",\r\n \t\"Luxembourg\",\r\n \t\"Madagascar\",\r\n \t\"Malawi\",\r\n \t\"Malaysia\",\r\n \t\"Maldives\",\r\n \t\"Mali\",\r\n \t\"Malta\",\r\n \t\"Marshall Islands\",\r\n \t\"Mauritania\",\r\n \t\"Mauritius\",\r\n \t\"Mexico\",\r\n \t\"Micronesia\",\r\n \t\"Moldova\",\r\n \t\"Monaco\",\r\n \t\"Mongolia\",\r\n \t\"Montenegro\",\r\n \t\"Morocco\",\r\n \t\"Mozambique\",\r\n \t\"Myanmar\",\r\n \t\"Namibia\",\r\n \t\"Nauru\",\r\n \t\"Nepal\",\r\n \t\"Netherlands\",\r\n \t\"New Zealand\",\r\n \t\"Nicaragua\",\r\n \t\"Niger\",\r\n \t\"Nigeria\",\r\n \t\"North Korea\",\r\n \t\"North Macedonia\",\r\n \t\"Norway\",\r\n \t\"Oman\",\r\n \t\"Pakistan\",\r\n \t\"Palau\",\r\n \t\"Palestine State\",\r\n \t\"Panama\",\r\n \t\"Papua New Guinea\",\r\n \t\"Paraguay\",\r\n \t\"Peru\",\r\n \t\"Philippines\",\r\n \t\"Poland\",\r\n \t\"Portugal\",\r\n \t\"Qatar\",\r\n \t\"Romania\",\r\n \t\"Russia\",\r\n \t\"Rwanda\",\r\n \t\"Saint Kitts and Nevis\",\r\n \t\"Saint Lucia\",\r\n \t\"Saint Vincent and the Grenadines\",\r\n \t\"Samoa\",\r\n \t\"San Marino\",\r\n \t\"Sao Tome and Principe\",\r\n \t\"Saudi Arabia\",\r\n \t\"Senegal\",\r\n \t\"Serbia\",\r\n \t\"Seychelles\",\r\n \t\"Sierra Leone\",\r\n \t\"Singapore\",\r\n \t\"Slovakia\",\r\n \t\"Slovenia\",\r\n \t\"Solomon Islands\",\r\n \t\"Somalia\",\r\n \t\"South Africa\",\r\n \t\"South Korea\",\r\n \t\"South Sudan\",\r\n \t\"Spain\",\r\n \t\"Sri Lanka\",\r\n \t\"Sudan\",\r\n \t\"Suriname\",\r\n \t\"Sweden\",\r\n \t\"Switzerland\",\r\n \t\"Syria\",\r\n \t\"Tajikistan\",\r\n \t\"Tanzania\",\r\n \t\"Thailand\",\r\n \t\"Timor-Leste\",\r\n \t\"Togo\",\r\n \t\"Tonga\",\r\n \t\"Trinidad and Tobago\",\r\n \t\"Tunisia\",\r\n \t\"Turkey\",\r\n \t\"Turkmenistan\",\r\n \t\"Tuvalu\",\r\n \t\"Uganda\",\r\n \t\"Ukraine\",\r\n \t\"United Arab Emirates\",\r\n \t\"United Kingdom\",\r\n \t\"United States of America\",\r\n \t\"Uruguay\",\r\n \t\"Uzbekistan\",\r\n \t\"Vanuatu\",\r\n \t\"Venezuela\",\r\n \t\"Vietnam\",\r\n \t\"Yemen\",\r\n \t\"Zambia\",\r\n \t\"Zimbabwe\",\r\n]\r\n\r\nexport default countries","const cities = \r\n[\r\n\"AbuÂ Dhabi\",\r\n\"Abuja\",\r\n\"Accra\",\r\n\"Adelaide\",\r\n\"Ahmedabad\",\r\n\"Albuquerque\",\r\n\"Aleppo\",\r\n\"Alexandria\",\r\n\"Amsterdam\",\r\n\"Anaheim\",\r\n\"Ankara\",\r\n\"Arlington\",\r\n\"Athens\",\r\n\"Atlanta\",\r\n\"Auckland\",\r\n\"Aurora\",\r\n\"Austin\",\r\n\"Bakersfield\",\r\n\"Bali\",\r\n\"Baltimore\",\r\n\"Bangalore\",\r\n\"Bangkok\",\r\n\"Barcelona\",\r\n\"Beijing\",\r\n\"Beirut\",\r\n\"Belfast\",\r\n\"Belgrade\",\r\n\"Berlin\",\r\n\"Bhopal\",\r\n\"Birmingham\",\r\n\"Bogota\",\r\n\"Bordeaux\",\r\n\"Boston\",\r\n\"Brasilia\",\r\n\"Bratislava\",\r\n\"Brighton\",\r\n\"Brisbane\",\r\n\"Bristol\",\r\n\"Brussels\",\r\n\"Bucharest\",\r\n\"Budapest\",\r\n\"BuenosÂ Aires\",\r\n\"Busan\",\r\n\"Cairo\",\r\n\"Calgary\",\r\n\"Cali\",\r\n\"Canberra\",\r\n\"CapeÂ Town\",\r\n\"Cardiff\",\r\n\"Casablanca\",\r\n\"Charlotte\",\r\n\"Chengdu\",\r\n\"Chennai\",\r\n\"Chicago\",\r\n\"Chongqing\",\r\n\"Christchurch\",\r\n\"Cleveland\",\r\n\"Cologne\",\r\n\"ColoradoÂ Springs\",\r\n\"Columbus\",\r\n\"Copenhagen\",\r\n\"CorpusÂ Christi\",\r\n\"Coventry\",\r\n\"Dallas\",\r\n\"DarÂ EsÂ Salaam\",\r\n\"Delhi\",\r\n\"Denver\",\r\n\"Detroit\",\r\n\"Dhaka\",\r\n\"Dubai\",\r\n\"Dublin\",\r\n\"Dusseldorf\",\r\n\"Edinburgh\",\r\n\"Edmonton\",\r\n\"ElÂ Paso\",\r\n\"Florence\",\r\n\"FortÂ Worth\",\r\n\"Frankfurt\",\r\n\"Fresno\",\r\n\"Gaza\",\r\n\"Glasgow\",\r\n\"GoldÂ Coast\",\r\n\"Guadalajara\",\r\n\"Guangzhou\",\r\n\"Halifax\",\r\n\"Hamburg\",\r\n\"Hamilton\",\r\n\"Havana\",\r\n\"Helsinki\",\r\n\"Henderson\",\r\n\"Hiroshima\",\r\n\"HoÂ ChiÂ MinhÂ City\",\r\n\"Honolulu\",\r\n\"Houston\",\r\n\"Hull\",\r\n\"Hyderabad\",\r\n\"Indianapolis\",\r\n\"Islamabad\",\r\n\"Istanbul\",\r\n\"Jacksonville\",\r\n\"Jaipur\",\r\n\"Jakarta\",\r\n\"Jerusalem\",\r\n\"Johannesburg\",\r\n\"Kanpur\",\r\n\"KansasÂ City\",\r\n\"Karachi\",\r\n\"Kathmandu\",\r\n\"Kingston\",\r\n\"Kitchener\",\r\n\"Kolkata\",\r\n\"KualaÂ Lumpur\",\r\n\"Lagos\",\r\n\"Lahore\",\r\n\"LasÂ Vegas\",\r\n\"Leicester\",\r\n\"Lexington\",\r\n\"Lima\",\r\n\"Lisbon\",\r\n\"Liverpool\",\r\n\"London\",\r\n\"LongÂ Beach\",\r\n\"LosÂ Angeles\",\r\n\"Louisville\",\r\n\"Lucknow\",\r\n\"Lyon\",\r\n\"Madrid\",\r\n\"Manchester\",\r\n\"Manila\",\r\n\"Marseille\",\r\n\"Mecca\",\r\n\"Medellin\",\r\n\"Melbourne\",\r\n\"Memphis\",\r\n\"Mesa\",\r\n\"MexicoÂ City\",\r\n\"Miami\",\r\n\"Milan\",\r\n\"Milwaukee\",\r\n\"Minneapolis\",\r\n\"Montpellier\",\r\n\"Montreal\",\r\n\"Moscow\",\r\n\"Mumbai\",\r\n\"Munich\",\r\n\"Nairobi\",\r\n\"Nantes\",\r\n\"Nashville\",\r\n\"NewÂ Orleans\",\r\n\"NewÂ York\",\r\n\"Newcastle\",\r\n\"Nice\",\r\n\"Nottingham\",\r\n\"Oakland\",\r\n\"OklahomaÂ City\",\r\n\"Omaha\",\r\n\"Osaka\",\r\n\"Oslo\",\r\n\"Ottawa\",\r\n\"PanamaÂ City\",\r\n\"Paris\",\r\n\"Perth\",\r\n\"Philadelphia\",\r\n\"PhnomÂ Penh\",\r\n\"Phoenix\",\r\n\"Pittsburgh\",\r\n\"PortÂ Moresby\",\r\n\"Portland\",\r\n\"Porto\",\r\n\"Prague\",\r\n\"Pretoria\",\r\n\"Pune\",\r\n\"Raleigh\",\r\n\"Reading\",\r\n\"Riga\",\r\n\"RioÂ DeÂ Janeiro\",\r\n\"Riverside\",\r\n\"Riyadh\",\r\n\"Rome\",\r\n\"Rotterdam\",\r\n\"Sacramento\",\r\n\"SanÂ Antonio\",\r\n\"SanÂ Diego\",\r\n\"SanÂ Francisco\",\r\n\"SanÂ Jose\",\r\n\"SantaÂ Ana\",\r\n\"Santiago\",\r\n\"SaoÂ Paulo\",\r\n\"Sarajevo\",\r\n\"Seattle\",\r\n\"Seoul\",\r\n\"Shanghai\",\r\n\"Sharjah\",\r\n\"Sheffield\",\r\n\"Shenzhen\",\r\n\"Sofia\",\r\n\"Southampton\",\r\n\"StÂ Petersburg\",\r\n\"St.Â Louis\",\r\n\"St.Â Paul\",\r\n\"Stockholm\",\r\n\"Stockton\",\r\n\"StokeÂ OnÂ Trent\",\r\n\"Stuttgart\",\r\n\"Surabaya\",\r\n\"Surat\",\r\n\"Swansea\",\r\n\"Sydney\",\r\n\"Tampa\",\r\n\"Tehran\",\r\n\"TelÂ Aviv\",\r\n\"Thessaloniki\",\r\n\"Tianjin\",\r\n\"Tijuana\",\r\n\"Tokyo\",\r\n\"Toronto\",\r\n\"Toulouse\",\r\n\"Tripoli\",\r\n\"Tucson\",\r\n\"Tulsa\",\r\n\"Valencia\",\r\n\"Vancouver\",\r\n\"Venice\",\r\n\"Victoria\",\r\n\"Vienna\",\r\n\"VirginiaÂ Beach\",\r\n\"Warsaw\",\r\n\"Washington\",\r\n\"Wellington\",\r\n\"Wichita\",\r\n\"Windsor\",\r\n\"Winnipeg\",\r\n\"Wuhan\",\r\n\"Yangon\",\r\n\"Zagreb\",\r\n\"Zurich\",\r\n]\r\n\r\nexport default cities","import React from \"react\";\r\nimport \"../App.css\";\r\nimport countries from \"../countries\";\r\nimport cities from \"../cities\";\r\n\r\nconst populateCountries = options => {\r\n  options = countries;\r\n\r\n  return options.map((option, index) => (\r\n    <option key={index} value={option}>\r\n      {option}\r\n    </option>\r\n  ));\r\n};\r\n\r\nconst populateCities = options => {\r\n  options = cities;\r\n\r\n  return options.map((option, index) => (\r\n    <option key={index} value={option}>\r\n      {option}\r\n    </option>\r\n  ));\r\n};\r\n\r\nconst Form = props => (\r\n  <form onSubmit={props.getWeather} method=\"get\">\r\n    <div className=\"form-row\">\r\n      <div className=\"form-group col-md-4 offset-md-2\">\r\n        <input\r\n          list=\"citylist\"\r\n          className=\"form-control\"\r\n          name=\"city\"\r\n          id=\"city\"\r\n          placeholder=\"City\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <datalist id=\"citylist\">{populateCities()}</datalist>\r\n      </div>\r\n\r\n      <div className=\"form-group col-md-4\">\r\n        <input\r\n          list=\"countrylist\"\r\n          className=\"form-control\"\r\n          name=\"country\"\r\n          id=\"country\"\r\n          placeholder=\"Country\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <datalist id=\"countrylist\">{populateCountries()}</datalist>\r\n      </div>\r\n    </div>\r\n\r\n    {props.error && <p className=\"error\">{props.error}</p>}\r\n\r\n    <div className=\"text-center\">\r\n      <button className=\"btn btn-primary\">Get Weather</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst convert = time => {\r\n  let unixtimestamp = time;\r\n  let date = new Date(unixtimestamp * 1000);\r\n  let hours = date.getHours();\r\n  let minutes = \"0\" + date.getMinutes();\r\n  let seconds = \"0\" + date.getSeconds();\r\n  let convertedTime =\r\n    \" \" + hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\r\n  return convertedTime;\r\n};\r\n\r\nconst toTitleCase = str => {\r\n  return str.replace(/\\w\\S*/g, function(txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n\r\nconst Weather = props =>\r\n  props.city || props.country ? (\r\n    <div className=\"list mt-4 col-md-8 offset-md-2\">\r\n      <ul className=\"list-group\">\r\n        {props.city && props.country && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Location: </span>\r\n            {toTitleCase(props.city)}, {props.country.toUpperCase()}\r\n          </li>\r\n        )}\r\n\r\n        {props.temperature && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Temperature: </span>\r\n            {props.temperature}&#176;C\r\n          </li>\r\n        )}\r\n\r\n        {props.humidity && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Humidity: </span>\r\n            {props.humidity}%\r\n          </li>\r\n        )}\r\n\r\n        {props.pressure && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Pressure: </span>\r\n            {props.pressure} hPA\r\n          </li>\r\n        )}\r\n\r\n        {props.sunrise && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Sunrise: </span>\r\n            {convert(props.sunrise)}\r\n          </li>\r\n        )}\r\n\r\n        {props.sunset && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Sunset: </span>\r\n            {convert(props.sunset)}\r\n          </li>\r\n        )}\r\n\r\n        {props.description && (\r\n          <li className=\"list-group-item\">\r\n            <span className=\"data-label\">Conditions: </span>\r\n            {toTitleCase(props.description)}\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\n\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"6356cf2c9a69a1c5dd7e2d381df530a6\";\n//https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=6356cf2c9a69a1c5dd7e2d381df530a6\n\nclass App extends Component {\n  state = {\n    temperature: 100,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    pressure: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    description: undefined,\n    code: undefined,\n    error: undefined,\n  };\n\n  getWeather = async e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n    console.log(data);\n\n    if (city && country && data.cod === 200) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        pressure: data.main.pressure,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        description: data.weather[0].description,\n        code: data.cod,\n        error: \"\",\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        pressure: undefined,\n        sunrise: undefined,\n        sunset: undefined,\n        icon: undefined,\n        description: undefined,\n        error: \"City/Country not found! Please try again!\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Titles />\n        <Form getWeather={this.getWeather} error={this.state.error} />\n        <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          sunset={this.state.sunset}\n          sunrise={this.state.sunrise}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}